<--------Leetcode 67-------->

class Solution {
public:
    string addBinary(string a, string b) {
        int i,j=a.size()-1,k=b.size()-1,l=min(a.size(),b.size()),carry=0;
        string s="";
        for(i=l-1;i>=0;i--){
            if(a[j]=='0' && b[k]=='0'){
                s=to_string(0+carry)+s;
                carry=0;
            }
            else if(a[j]=='1' && b[k]=='1'){
                s=to_string(0+carry)+s;
                carry=1;
            }
            else{
                if(carry==0){
                    s='1'+s;
                    carry=0;
                }
                else{
                    s='0'+s;
                    carry=1;
                }
            }
            j--;k--;
        }
        while(j>=0){
            if(carry==1){
                s=to_string((a[j]+carry)%2)+s;
                carry=1;
                if(a[j]=='0'){
                    carry=0;
                }
            }
            else{
                s=to_string(a[j]%2)+s;
                carry=0;
            }
            j--;
        }
        while(k>=0){
            if(carry==1){
                string a=to_string((b[k]+carry))
                s=a+s;
                carry=1;
                if(b[k]=='0'){
                    carry=0;
                }
            }
            else{
                s=to_string(b[k]%2)+s;
                carry=0;
            }
            k--;
        }
        if(carry==1){
            s='1'+s;
        }
        return s;
    }
};

Time Complexity: O(max(n,m)) //n:length of a, m:length of b
Space Complexity: O(1)
