<--------Leetcode 122-------->

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int minn=prices[0],i,maxx=minn,j,sum=0;
        for(i=1;i<prices.size();i++){
            if(prices[i]>=maxx){
                maxx=prices[i]; 
            }
            else{
                sum+=(maxx-minn);
                minn=prices[i];
                maxx=minn;
            }
        }
        sum+=(maxx-minn);
        return sum;
    }
};
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int a=prices[0],n=prices.size(),ans=0;
        for(int i=1;i<n;i++){
            if(prices[i]>a){
                ans+=(prices[i]-a);
            }
            a=prices[i];
        }
        return ans;
    }
};


Time Complexity: O(n)
Space Complexity: O(1)
