<--------Leetcode 15-------->

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        
        int n=nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>>v;
        for(int i=0;i<n-2;i++){
            int target=-nums[i];
            int j=i+1,k=n-1;
            if(i > 0 && nums[i] == nums[i - 1]) 
                continue;
            while(j<k){
                if(nums[j]+nums[k]==target){
                    v.push_back({nums[i],nums[j],nums[k]});
                    while(j<k && nums[j]==nums[j+1]){
                        j++;
                    }
                    while(j<k && nums[k-1]==nums[k]){
                        k--;
                    }
                    j++;
                    k--;
                }
                else if(nums[j]+nums[k]>target){
                    k--;
                }
                else{
                    j++;
                }
            }
        }
        return v;
    }
};

Time Complexity: O(n*n)
Space Complexity: O(n)
