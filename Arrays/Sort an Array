<--------Leetcode 912-------->

class Solution {
public:
    void merge(vector<int>&nums, int l,int m, int h){
        int i=l,j=h,k=m+1,a=0;
        vector<int>arr(h-l+1);
        while(i<=m && k<=j){
            if(nums[i]<nums[k]){
                arr[a++]=nums[i++];
            }
            else{
                arr[a++]=nums[k++];
            }
        }
        while(i<=m ){
                arr[a++]=nums[i++];
        }
        while(k<=j){
                arr[a++]=nums[k++];
        }
        i=l;
        for(a=0;a<arr.size();a++){
            nums[l++]=arr[a];
        }
    }
    void merge_sort(vector<int>&nums, int l,int h){
        if(l>=h) return;
        int mid=l+(h-l)/2;
        merge_sort(nums,l,mid);
        merge_sort(nums,mid+1,h);
        merge(nums,l,mid,h);
    }
    vector<int> sortArray(vector<int>& nums) {
        merge_sort(nums,0,nums.size()-1);
        return nums;
    }
};

Time Complexity: O(n log n)
Space Complexity: O(n)
