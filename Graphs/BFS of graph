<--------https://www.geeksforgeeks.org/problems/bfs-traversal-of-graph/1-------->


class Solution {
  public:
    vector<int> bfsOfGraph(vector<vector<int>> &adj) {
        int n=adj.size();
        queue<int> q;
        vector<int> ans;
        vector<bool> visited(n,false);
        q.push(0);
        visited[0]=true;
        while(!q.empty()){
                int u=q.front();
                ans.push_back(u);
                
                q.pop();
                for(int i=0;i<adj[u].size();i++){
                    if(!visited[adj[u][i]]){
                    visited[adj[u][i]]=true;
                    q.push(adj[u][i]);}
                }
            
        }
        return ans;
    }
};


Time Complexity: O(V+E)
Space Complexity: O(V)
