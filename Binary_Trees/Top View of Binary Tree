<--------https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1-------->

class Solution
{
    public:
    void func(Node* root, map<int,int> &mp, int v){
        if(root==NULL) return;
        queue<pair<int,Node*>> q;
        q.push({0,root});
        while(!q.empty()){
            int n=q.size();
            while(n--){
                Node* temp=q.front().second;
                int v=q.front().first;
                q.pop();
                if(mp.find(v)==mp.end()){
                    mp[v]=temp->data;
                }
                if(temp->left) q.push({v-1,temp->left});
                if(temp->right) q.push({v+1,temp->right});
            }
        }
    }
    vector<int> topView(Node *root)
    {
        map<int,int> mp;
        vector<int> ans;
        func(root,mp,0);
        for(auto ch:mp){
            ans.push_back(ch.second);
        }
        return ans;
    }

};


Time Complexity: O(n log n)
Space Complexity: O(n)
