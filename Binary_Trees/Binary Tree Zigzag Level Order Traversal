<--------Leetcode 103-------->

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL) return {};
        queue<TreeNode*>q;
        q.push(root);
        TreeNode* node;
        int i=1;
        vector<vector<int>>ans;
        while(!q.empty()){
            int n=q.size();
            vector<int> temp;
            while(n--){
                node=q.front();
                q.pop();
                if(i%2!=0){
                    temp.push_back(node->val);
                }
                else{
                   temp.insert(temp.begin(), node->val);

                }
                if(node->left!=NULL) q.push(node->left);
                if(node->right!=NULL) q.push(node->right);
            }
            i++;
            ans.push_back(temp);
        }
        return ans;
    }
};

Time Complexity: O(n)
Space Complexity: O(n)
