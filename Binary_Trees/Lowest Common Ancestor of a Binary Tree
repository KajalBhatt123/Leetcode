<--------Leetcode 236-------->

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL || root==p || root==q) return root;
        TreeNode* left=lowestCommonAncestor(root->left,p,q);
        TreeNode* right=lowestCommonAncestor(root->right,p,q);
        if(left!=NULL && right!=NULL){
            return root;
        }
        if(left!=NULL) return left;
        return right;
    }
};

Time Complexity: O(n) - Each node is visited once.
Space Complexity: O(n) - Recursion stack can go up to n in the worst case.
