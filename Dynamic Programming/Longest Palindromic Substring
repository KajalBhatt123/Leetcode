<--------Leetcode 5-------->


class Solution {
public:
    int check(string &s, int i, int j, vector<vector<int>>&dp){
        if(i>=j){
            return 1;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        if(s[i]==s[j]){
            return dp[i][j]=check(s,i+1,j-1,dp);
        }
        return dp[i][j]=0;
    }
    string longestPalindrome(string s) {
        int maxx=0,index=0;
        vector<vector<int>> dp(s.size(),vector<int>(s.size(),-1));
        for(int i=0;i<s.size();i++){
            for(int j=i;j<s.size();j++){
                if(check(s,i,j,dp)){
                    if(j-i+1>maxx){
                        index=i;
                        maxx=j-i+1;
                    }
                }
            }
        }
        return s.substr(index, maxx);
    }
};


Time Complexity: O(n^2)
Space Complexity: O(n^2)
